openapi: 3.0.0
info:
  title: Factory Management System API
  version: 1.0.0
  description: API documentation for managing factory operations, including Employees, Products, Orders, Customers, and Production.

paths:
  /api/employees:
    post:
      summary: Create a new employee
      description: Adds a new employee to the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                position:
                  type: string
                salary:
                  type: number
                hireDate:
                  type: string
                  format: date
              required: [name, position, salary, hireDate]
      responses:
        '201':
          description: Employee created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: List all employees
      description: Retrieves a list of all employees.
      responses:
        '200':
          description: A list of employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/products:
    post:
      summary: Create a new product
      description: Adds a new product to the inventory.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                quantityInStock:
                  type: integer
              required: [name, description, price, quantityInStock]
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: List all products
      description: Retrieves a list of all products.
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/customers:
    post:
      summary: Create a new customer
      description: Adds a new customer to the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                phone:
                  type: string
              required: [name, email, phone]
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: List all customers
      description: Retrieves a list of all customers.
      responses:
        '200':
          description: A list of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/customers/{customerId}:
    get:
      summary: Get customer by ID
      description: Retrieves details of a customer by their ID.
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Invalid customer ID format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Employee:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        position:
          type: string
        salary:
          type: number
        hireDate:
          type: string
          format: date

    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: number
        quantityInStock:
          type: integer

    Customer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string

    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string




Explanation

    
    Paths: Each path (/api/employees, /api/products, /api/customers) contains operations (POST for creating, GET for listing) with appropriate request bodies, response descriptions, and examples.
    
    Error Responses: Common errors are defined for 400 (invalid input), 404 (not found), and 500 (internal error) with sample response bodies under the components/schemas/Error.
   
    Components/Schemas: Defines reusable schemas for each model (Employee, Product, Customer, and Error) so that they can be easily referenced across multiple endpoints.

